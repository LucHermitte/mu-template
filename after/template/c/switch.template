VimL:"{switch-case} Template-File, Luc Hermitte
VimL:" hint: switch (cond) { case... default ...}
VimL: " Usage:
VimL: " - :MuTemplate c/swith un deux trois
VimL: " - call lh#mut#expand_and_jump(0, 'c/switch', {'values': ['un', 'deux', 'trois'] })
VimL: let s:reindent     = 1
VimL: let s:marker_open  = '<+'
VimL: let s:marker_close = '+>'
VimL: function! s:_LoopOverCases() abort
VimL:   let args = reverse(copy(s:Param('values', s:CmdLineParams())))
VimL:   if empty(args)
VimL:     call s:Include('case', 'c', {'use_blocks': s:_with_block})
VimL:   else
VimL:     for arg in args
VimL:       if arg !~ 'MAX__$'
VimL:         call s:Include('case', 'c', {'case': arg, 'use_blocks': s:_with_block})
VimL:       endif
VimL:     endfor
VimL:   endif
VimL: endfunction
VimL: "
VimL: let s:_expr = s:Param('expr', lh#marker#txt('expr'))
MuT:  let s:_with_block = s:ParamOrAsk('use_blocks', "Insert a block for each case (0/1) ?")
switch(<+s:_expr+>){
VimL: call s:_LoopOverCases()
    default:<+s:_with_block?'{':''+>
          <+ lh#marker#txt("default-code") +>;
          break;
<+s:_with_block?'}':''+>
}<+s:TerminalPlaceHolder()+>

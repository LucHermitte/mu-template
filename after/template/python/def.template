VimL:" def File Template, Luc Hermitte, lun. 07 d√©c. 2015 21:23:48 CET
VimL:" hint: def fn():
VimL: let s:marker_open  = '<+'
VimL: let s:marker_close = '+>'
VimL: let s:reindent     = 'python'
MuT:  let s:function = s:Param('function', {})
MuT:  let s:kind = get(s:function, 'kind', '')
MuT:  if s:kind =~ '\vinit'
VimL:   " avoid infinite loop thanks to :unlet
VimL:   unlet s:function['kind']
VimL: " TODO: add self!
VimL:   call s:Include(s:kind, 'python', extend(s:function, {'indented': 0}))
MuT:  else
def <+s:SurroundableParam('name', 2) +>(<+s:SurroundableParam('params', 3)+>):
VimL: call s:Include('docstring', 'python', {'indented': 1})
    <+s:SurroundableParam('pass', 1)+>
<+s:TerminalPlaceHolder()+>
MuT:  endif
